#ifndef CONST_CASTLE_H
#define CONST_CASTLE_H

#include "cocos2d.h"
#include "SimpleAudioEngine.h"

#include "BarEntity.h"

class BaseEnemy;

using namespace cocos2d;

class Castle : public BarEntity
{
	protected:
		// ===========================================================
		// Inner Classes
		// ===========================================================

		// ===========================================================
		// Constants
		// ===========================================================

		// ===========================================================
		// Fields
		// ===========================================================

		// ===========================================================
		// Constructors
		// ===========================================================

		// ===========================================================
		// Methods
		// ===========================================================

		// ===========================================================
		// Virtual Methods
		// ===========================================================

	private:
		// ===========================================================
		// Inner Classes
		// ===========================================================

		// ===========================================================
		// Constants
		// ===========================================================

		// ===========================================================
		// Fields
		// ===========================================================

		int mFortification;

		float mShockwaveTime;
		float mShockwaveTimeElapsed;

		bool mShouldShoot;

		Entity* mCastleWall1;
		Entity* mCastleWall2;
		Entity* mCastleWall3;

		// ===========================================================
		// Constructors
		// ===========================================================

		// ===========================================================
		// Methods
		// ===========================================================
		
		// ===========================================================
		// Virtual Methods
		// ===========================================================

	public:
		// ===========================================================
		// Inner Classes
		// ===========================================================

		// ===========================================================
		// Constants
		// ===========================================================

		Castle(EntityManager* pBullets);

		// ===========================================================
		// Fields
		// ===========================================================

		Entity* mShockwave;

		EntityManager* mBullets;

		// ===========================================================
		// Constructors
		// ===========================================================

		// ===========================================================
		// Methods
		// ===========================================================

		void fire();
		void unfire();

		void update(int pType, int pLevel);

		bool isCanFire();

		void fire(BaseEnemy* pEnemy);

		void reset();
		
		// ===========================================================
		// Virtual Methods
		// ===========================================================

		Entity* create();

		void update(float pDeltaTime);

		virtual void removeHealth(float pHealth);
};

#endif